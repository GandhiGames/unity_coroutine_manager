.TH "ExampleJobManagerTest" 3 "Mon Jan 4 2016" "Version 1.0" "Coroutine Manager Pro" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ExampleJobManagerTest \- Includes a number of methods to test the functionality of the \fBCM_JobManager\fP class\&. Each method showcases a particular functionality of the \fBCM_JobManager\fP that you can implement in your own projects\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBGlobalJobManagerEventTest\fP ()"
.br
.RI "\fISubscribes to each of the global managers events\&. NotifyOnJobAdded: called everytime a job is added to the global manager, NotifyOnJobRemoved: called everytime a job is removed, NotifyOnAllJobsKilled: called when \fBCM_JobManager\&.KillAll\fP is invoked, NotifyOnAllJobsResumed: called when \fBCM_JobManager\&.ResumeAll\fP is called, NotifyOnAllJobsPaused: called when \fBCM_JobManager\&.PauseAll\fP is invoked, and NotifyOnAllJobsCleared: called when \fBCM_JobManager\&.ClearJobList\fP is invoked\&. \fP"
.ti -1c
.RI "void \fBGlobalJobStartTest\fP ()"
.br
.RI "\fIStarts the test job\&. \fP"
.ti -1c
.RI "void \fBGlobalJobPauseTest\fP ()"
.br
.RI "\fIPauses the test job\&. \fP"
.ti -1c
.RI "void \fBGlobalJobResumeTest\fP ()"
.br
.RI "\fIResumes the test job\&. \fP"
.ti -1c
.RI "void \fBGlobalJobStopTest\fP ()"
.br
.RI "\fIStops the test job\&. This also removes the reference from the JobManager\&. \fP"
.ti -1c
.RI "void \fBGlobalStartAllTest\fP ()"
.br
.RI "\fIStarts all jobs owned by the global JobManager\&. \fP"
.ti -1c
.RI "void \fBDelayedPauseAllTest\fP ()"
.br
.RI "\fIPauses all jobs owned by the global JobManager after 1 second has passed\&. \fP"
.ti -1c
.RI "void \fBDelayedResumeAllTest\fP ()"
.br
.RI "\fIResumes all jobs owned by the global JobManager after 1\&.5 seconds have passed\&. \fP"
.ti -1c
.RI "void \fBDelayedKillAllTest\fP ()"
.br
.RI "\fIKills all jobs owned by the global JobManager after 2 seconds have passed\&. This also removes all references to those jobs from the JobManager\&. \fP"
.ti -1c
.RI "void \fBLocalJobManagerTest\fP ()"
.br
.RI "\fILocal job manager test\&. Creates a new local JobManager, subscribes to \fBCM_JobManager\&.jobAdded\fP and \fBCM_JobManager\&.jobRemoved\fP events, adds a test job to the local JobManager, and finally starts, pauses, resumes, and stops this test job\&. This is used to show that anything you can do with the glocal JobManager you can also do with a local JobManager\&. This is useful if you want to create seperate JobManagers for seperate parts of your codebase\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Includes a number of methods to test the functionality of the \fBCM_JobManager\fP class\&. Each method showcases a particular functionality of the \fBCM_JobManager\fP that you can implement in your own projects\&. 


.SH "Member Function Documentation"
.PP 
.SS "void ExampleJobManagerTest\&.DelayedKillAllTest ()"

.PP
Kills all jobs owned by the global JobManager after 2 seconds have passed\&. This also removes all references to those jobs from the JobManager\&. 
.SS "void ExampleJobManagerTest\&.DelayedPauseAllTest ()"

.PP
Pauses all jobs owned by the global JobManager after 1 second has passed\&. 
.SS "void ExampleJobManagerTest\&.DelayedResumeAllTest ()"

.PP
Resumes all jobs owned by the global JobManager after 1\&.5 seconds have passed\&. 
.SS "void ExampleJobManagerTest\&.GlobalJobManagerEventTest ()"

.PP
Subscribes to each of the global managers events\&. NotifyOnJobAdded: called everytime a job is added to the global manager, NotifyOnJobRemoved: called everytime a job is removed, NotifyOnAllJobsKilled: called when \fBCM_JobManager\&.KillAll\fP is invoked, NotifyOnAllJobsResumed: called when \fBCM_JobManager\&.ResumeAll\fP is called, NotifyOnAllJobsPaused: called when \fBCM_JobManager\&.PauseAll\fP is invoked, and NotifyOnAllJobsCleared: called when \fBCM_JobManager\&.ClearJobList\fP is invoked\&. 
.SS "void ExampleJobManagerTest\&.GlobalJobPauseTest ()"

.PP
Pauses the test job\&. 
.SS "void ExampleJobManagerTest\&.GlobalJobResumeTest ()"

.PP
Resumes the test job\&. 
.SS "void ExampleJobManagerTest\&.GlobalJobStartTest ()"

.PP
Starts the test job\&. 
.SS "void ExampleJobManagerTest\&.GlobalJobStopTest ()"

.PP
Stops the test job\&. This also removes the reference from the JobManager\&. 
.SS "void ExampleJobManagerTest\&.GlobalStartAllTest ()"

.PP
Starts all jobs owned by the global JobManager\&. 
.SS "void ExampleJobManagerTest\&.LocalJobManagerTest ()"

.PP
Local job manager test\&. Creates a new local JobManager, subscribes to \fBCM_JobManager\&.jobAdded\fP and \fBCM_JobManager\&.jobRemoved\fP events, adds a test job to the local JobManager, and finally starts, pauses, resumes, and stops this test job\&. This is used to show that anything you can do with the glocal JobManager you can also do with a local JobManager\&. This is useful if you want to create seperate JobManagers for seperate parts of your codebase\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coroutine Manager Pro from the source code\&.
