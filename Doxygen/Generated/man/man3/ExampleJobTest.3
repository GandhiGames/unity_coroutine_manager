.TH "ExampleJobTest" 3 "Mon Jan 4 2016" "Version 1.0" "Coroutine Manager Pro" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ExampleJobTest \- Includes a number of methods to test the functionality of the \fBCM_Job\fP class\&. Each method showcases a particular functionality of the \fBCM_Job\fP class that you can implement in your own projects\&. Each method returns an ienumerator so that it can added to a job queue to be run in sequence for test purposes\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits MonoBehaviour\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "IEnumerator \fBSimpleJobTest\fP ()"
.br
.RI "\fICreates and starts a job\&. \fP"
.ti -1c
.RI "IEnumerator \fBJobTestWithDelayedStart\fP ()"
.br
.RI "\fICreates and starts a job after a delay\&. \fP"
.ti -1c
.RI "IEnumerator \fBJobTestWithDelayedPause\fP ()"
.br
.RI "\fICreates coroutine job, starts job immediately and then pauses coroutine after 4 seconds\&. This paused job is then stored and can be resumed/killed from any class that has a reference to that job\&. \fP"
.ti -1c
.RI "IEnumerator \fBJobTestWithDelayedResume\fP ()"
.br
.RI "\fICreates new job, pauses after 1 second, and resumes after 3 seconds\&. \fP"
.ti -1c
.RI "IEnumerator \fBJobTestWithDelayedKill\fP ()"
.br
.RI "\fICreates coroutine job, starts job immediately and then sets the job to be killed after 4 seconds\&. \fP"
.ti -1c
.RI "IEnumerator \fBJobTestWithStartAndEndEvents\fP ()"
.br
.RI "\fICreates new job, subscribes to the job start and end events and then starts job to be run immediately\&. \fP"
.ti -1c
.RI "IEnumerator \fBChildJobTest\fP ()"
.br
.RI "\fIChild job test\&. Creates new job, adds two children (parent will not complete until children have finished processing) and starts the job\&. \fP"
.ti -1c
.RI "IEnumerator \fBSingleCloneJobTest\fP ()"
.br
.RI "\fICreates a new job, clones job, and then runs clone\&. \fP"
.ti -1c
.RI "IEnumerator \fBMultipleCloneJobTest\fP ()"
.br
.RI "\fICreates a new job, clones five copies of the original job, and then starts a random clone\&. \fP"
.ti -1c
.RI "IEnumerator \fBInfinitelyRepeatableJobTest\fP ()"
.br
.RI "\fICreates and starts a job that will repeat for 3 seconds\&. The job complete event is subscribed to, this is used to display how many times the job will be repeated\&. \fP"
.ti -1c
.RI "IEnumerator \fBMultipleRepeatableJobTest\fP ()"
.br
.RI "\fICreates and starts a job that will repeat three times\&. The job complete event is subscribed to, this is used to display how many times the job will be repeated\&. \fP"
.ti -1c
.RI "IEnumerator \fBMutltipleRepeatableJobTestWithChild\fP ()"
.br
.RI "\fICreates and starts a job that will repeat three times\&. Adds a child job that will also repeat three times\&. The job complete event and child job complete events are subscribed to, this is used to display how many times the job will be repeated\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Includes a number of methods to test the functionality of the \fBCM_Job\fP class\&. Each method showcases a particular functionality of the \fBCM_Job\fP class that you can implement in your own projects\&. Each method returns an ienumerator so that it can added to a job queue to be run in sequence for test purposes\&. 


.SH "Member Function Documentation"
.PP 
.SS "IEnumerator ExampleJobTest\&.ChildJobTest ()"

.PP
Child job test\&. Creates new job, adds two children (parent will not complete until children have finished processing) and starts the job\&. 
.SS "IEnumerator ExampleJobTest\&.InfinitelyRepeatableJobTest ()"

.PP
Creates and starts a job that will repeat for 3 seconds\&. The job complete event is subscribed to, this is used to display how many times the job will be repeated\&. 
.SS "IEnumerator ExampleJobTest\&.JobTestWithDelayedKill ()"

.PP
Creates coroutine job, starts job immediately and then sets the job to be killed after 4 seconds\&. 
.SS "IEnumerator ExampleJobTest\&.JobTestWithDelayedPause ()"

.PP
Creates coroutine job, starts job immediately and then pauses coroutine after 4 seconds\&. This paused job is then stored and can be resumed/killed from any class that has a reference to that job\&. 
.SS "IEnumerator ExampleJobTest\&.JobTestWithDelayedResume ()"

.PP
Creates new job, pauses after 1 second, and resumes after 3 seconds\&. 
.SS "IEnumerator ExampleJobTest\&.JobTestWithDelayedStart ()"

.PP
Creates and starts a job after a delay\&. 
.SS "IEnumerator ExampleJobTest\&.JobTestWithStartAndEndEvents ()"

.PP
Creates new job, subscribes to the job start and end events and then starts job to be run immediately\&. 
.SS "IEnumerator ExampleJobTest\&.MultipleCloneJobTest ()"

.PP
Creates a new job, clones five copies of the original job, and then starts a random clone\&. 
.SS "IEnumerator ExampleJobTest\&.MultipleRepeatableJobTest ()"

.PP
Creates and starts a job that will repeat three times\&. The job complete event is subscribed to, this is used to display how many times the job will be repeated\&. 
.SS "IEnumerator ExampleJobTest\&.MutltipleRepeatableJobTestWithChild ()"

.PP
Creates and starts a job that will repeat three times\&. Adds a child job that will also repeat three times\&. The job complete event and child job complete events are subscribed to, this is used to display how many times the job will be repeated\&. 
.SS "IEnumerator ExampleJobTest\&.SimpleJobTest ()"

.PP
Creates and starts a job\&. 
.SS "IEnumerator ExampleJobTest\&.SingleCloneJobTest ()"

.PP
Creates a new job, clones job, and then runs clone\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Coroutine Manager Pro from the source code\&.
