<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_example_job_test_8cs" kind="file" language="C#">
    <compoundname>ExampleJobTest.cs</compoundname>
    <innerclass refid="class_example_job_test" prot="public">ExampleJobTest</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_unity_engine" kindref="compound">UnityEngine</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_system" kindref="compound">System</ref>.Collections;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_example_job_test" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_example_job_test" kindref="compound">ExampleJobTest</ref><sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Start<sp/>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job_queue" kindref="compound">CM_JobQueue</ref>.<ref refid="class_c_m___job_queue_1ab9832aba052e19ef3c726a05ca4849fa" kindref="member">Make</ref><sp/>()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1ab235738389e731b6e1c1a0936bfb6585" kindref="member">SimpleJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a1bf38c8133ef7854e4b3ef89103888df" kindref="member">JobTestWithDelayedStart</ref><sp/>())</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1ac390bb8191f6ba7b6df2deb646c7c7de" kindref="member">JobTestWithDelayedPause</ref><sp/>())</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1af80fb4b62309ca6833878c49b82df703" kindref="member">JobTestWithDelayedResume</ref><sp/>())</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a95678534abfb975339db76044a92b28d" kindref="member">JobTestWithDelayedKill</ref><sp/>())</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a5c211a493fa17b33b35ba64214d1bb09" kindref="member">JobTestWithStartAndEndEvents</ref><sp/>())</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a95dc6aea129056f6565484c7efd6ab03" kindref="member">ChildJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a7a5819f751f3ba68941dd5530bf7a365" kindref="member">SingleCloneJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a707273ae104f9aac979fa8d697e306b5" kindref="member">MultipleCloneJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a8941dbc9a2ba2c401785414a669b6331" kindref="member">InfinitelyRepeatableJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a11f7ec3104852950a7f35208b75671e5" kindref="member">MultipleRepeatableJobTest</ref><sp/>())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a5eb3ac10485cd8620f53d38eb413a53d" kindref="member">Enqueue</ref><sp/>(<ref refid="class_example_job_test_1a4d476fb823d8c82dfe1fe17f37d4fdf7" kindref="member">MutltipleRepeatableJobTestWithChild</ref><sp/>())</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_queue_1a0b741b6ee48616f0bc2f1e14360f0575" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1ab235738389e731b6e1c1a0936bfb6585" kindref="member">SimpleJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Simple<sp/>job<sp/>test<sp/>running&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a1bf38c8133ef7854e4b3ef89103888df" kindref="member">JobTestWithDelayedStart</ref><sp/>()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>test<sp/>with<sp/>delayed<sp/>start<sp/>running&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>(1.5f);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1ac390bb8191f6ba7b6df2deb646c7c7de" kindref="member">JobTestWithDelayedPause</ref><sp/>()</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>job<sp/>=<sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(InfiniteTest<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>test<sp/>with<sp/>delayed<sp/>pause<sp/>running&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>job.<ref refid="class_c_m___job_1aedbae0620e8da4cfc201f0dd3fc70c0e" kindref="member">Pause</ref><sp/>(4f);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1af80fb4b62309ca6833878c49b82df703" kindref="member">JobTestWithDelayedResume</ref><sp/>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(InfiniteTest<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>test<sp/>with<sp/>delayed<sp/>resume<sp/>running&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>().<ref refid="class_c_m___job_1aedbae0620e8da4cfc201f0dd3fc70c0e" kindref="member">Pause</ref><sp/>(1f).<ref refid="class_c_m___job_1a17e7b235cb28ed51729f9235de1b576b" kindref="member">Resume</ref><sp/>(3f);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a95678534abfb975339db76044a92b28d" kindref="member">JobTestWithDelayedKill</ref><sp/>()</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(InfiniteTest<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>test<sp/>with<sp/>delayed<sp/>kill<sp/>running&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>().<ref refid="class_c_m___job_1a436839505339e2eb42c84de560a0874a" kindref="member">Kill</ref><sp/>(4f);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a5c211a493fa17b33b35ba64214d1bb09" kindref="member">JobTestWithStartAndEndEvents</ref><sp/>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>test<sp/>with<sp/>start<sp/>and<sp/>end<sp/>event<sp/>subscription&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1a144f7f4f50fc9e78cb3cc89948b43781" kindref="member">NotifyOnJobStarted</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Started:<sp/>job<sp/>test<sp/>with<sp/>event<sp/>subscription&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Finished:<sp/>job<sp/>test<sp/>with<sp/>event<sp/>subscription&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}).Start<sp/>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a95dc6aea129056f6565484c7efd6ab03" kindref="member">ChildJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Parent<sp/>job<sp/>test&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1aa71a7f4fa664df6b7dd8f33f431f9935" kindref="member">AddChild</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Child1<sp/>job<sp/>test&quot;</highlight><highlight class="normal">)).<ref refid="class_c_m___job_1aa71a7f4fa664df6b7dd8f33f431f9935" kindref="member">AddChild</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Child2<sp/>job<sp/>test&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1aadeb872e3ab5b90139e0d728f869be6c" kindref="member">NotifyOnChildJobStarted</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.<ref refid="class_c_m___job_event_args_1a67592931253f8d17df276bc17b54952b" kindref="member">hasChildJobs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(e.childJobs.Length<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>child<sp/>jobs<sp/>to<sp/>process&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnChildJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e.<ref refid="class_c_m___job_event_args_1a67592931253f8d17df276bc17b54952b" kindref="member">hasChildJobs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Finished<sp/>processing<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e.childJobs.Length<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>child<sp/>jobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Parent<sp/>job<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}).Start<sp/>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a7a5819f751f3ba68941dd5530bf7a365" kindref="member">SingleCloneJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>original<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>origJob<sp/>=<sp/>GetJobToClone<sp/>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clone<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>cloneJobOne<sp/>=<sp/>origJob.Clone<sp/>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>cloned<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cloneJobOne.Start<sp/>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a707273ae104f9aac979fa8d697e306b5" kindref="member">MultipleCloneJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>original<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>origJob<sp/>=<sp/>GetJobToClone<sp/>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clone<sp/>five<sp/>copies<sp/>of<sp/>original<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>[]<sp/>cloneJobArray<sp/>=<sp/>origJob.<ref refid="class_c_m___job_1a7821bb2da3f3c9b30e171595a48aba7d" kindref="member">Clone</ref><sp/>(5);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>random<sp/>job.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cloneJobArray<sp/>[Random.Range<sp/>(0,<sp/>cloneJobArray.Length)].<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a8941dbc9a2ba2c401785414a669b6331" kindref="member">InfinitelyRepeatableJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Infinitely<sp/>repeatable<sp/>Test&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1aad8e48e0d2fa17fde30ba76516dbf7bd" kindref="member">NotifyOnJobComplete</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>repeated<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e.<ref refid="class_c_m___job_event_args_1a602ecf7364ca2e6a2285f1622e7f1c8b" kindref="member">job</ref>.<ref refid="class_c_m___job_1a042add3b81a210d7a98505bd53765ab5" kindref="member">numOfTimesExecuted</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Repeat<sp/>().StopRepeat<sp/>(3f).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a11f7ec3104852950a7f35208b75671e5" kindref="member">MultipleRepeatableJobTest</ref><sp/>()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfTimesToRepeat<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Multiple<sp/>repeatable<sp/>test&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1aad8e48e0d2fa17fde30ba76516dbf7bd" kindref="member">NotifyOnJobComplete</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Job<sp/>repeated<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e.<ref refid="class_c_m___job_event_args_1a602ecf7364ca2e6a2285f1622e7f1c8b" kindref="member">job</ref>.<ref refid="class_c_m___job_1a042add3b81a210d7a98505bd53765ab5" kindref="member">numOfTimesExecuted</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>numOfTimesToRepeat<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Repeat<sp/>(numOfTimesToRepeat).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IEnumerator<sp/><ref refid="class_example_job_test_1a4d476fb823d8c82dfe1fe17f37d4fdf7" kindref="member">MutltipleRepeatableJobTestWithChild</ref><sp/>()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfTimesToRepeat<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Repeating<sp/>test<sp/>with<sp/>child&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1aa71a7f4fa664df6b7dd8f33f431f9935" kindref="member">AddChild</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Repeating<sp/>test<sp/>(child)&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1aad8e48e0d2fa17fde30ba76516dbf7bd" kindref="member">NotifyOnJobComplete</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Parent<sp/>job<sp/>repeated<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>e.<ref refid="class_c_m___job_event_args_1a602ecf7364ca2e6a2285f1622e7f1c8b" kindref="member">job</ref>.<ref refid="class_c_m___job_1a042add3b81a210d7a98505bd53765ab5" kindref="member">numOfTimesExecuted</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>numOfTimesToRepeat<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnChildJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Child<sp/>job<sp/>repeated<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(e.<ref refid="class_c_m___job_event_args_1a602ecf7364ca2e6a2285f1622e7f1c8b" kindref="member">job</ref>.<ref refid="class_c_m___job_1a042add3b81a210d7a98505bd53765ab5" kindref="member">numOfTimesExecuted</ref><sp/>+<sp/>1)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>numOfTimesToRepeat<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Repeat<sp/>(numOfTimesToRepeat).<ref refid="class_c_m___job_1a54fd4dbd315708b9acd2a09f7096a554" kindref="member">Start</ref><sp/>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#region<sp/>HelperMethods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/>PrintStringAfterDelay<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delay<sp/>=<sp/>0f)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForSeconds<sp/>(delay);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(a);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>IEnumerator<sp/>InfiniteTest<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>a)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>wait<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WaitForSeconds<sp/>(0.5f);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(a<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>++i);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yield<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wait;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref><sp/>GetJobToClone<sp/>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c_m___job" kindref="compound">CM_Job</ref>.<ref refid="class_c_m___job_1a1ffab1654cb694e80dd1af68418048bb" kindref="member">Make</ref><sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Clone<sp/>job<sp/>test&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;cloned_id&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_c_m___job_1a144f7f4f50fc9e78cb3cc89948b43781" kindref="member">NotifyOnJobStarted</ref><sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>job<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnJobPaused<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>job<sp/>paused&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnJobResumed<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>job<sp/>resumed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>job<sp/>complete&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnChildJobStarted<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>child<sp/>jobs<sp/>started&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.NotifyOnChildJobComplete<sp/>((</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>sender,<sp/><ref refid="class_c_m___job_event_args" kindref="compound">CM_JobEventArgs</ref><sp/>e)<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log<sp/>(</highlight><highlight class="stringliteral">&quot;Cloned<sp/>child<sp/>jobs<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.AddChild<sp/>(PrintStringAfterDelay<sp/>(</highlight><highlight class="stringliteral">&quot;Clone<sp/>Child<sp/>Test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endregion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/robert/Dropbox/Work/Unity/coroutine_manager/Assets/CM/Examples/Scripts/Tests/ExampleJobTest.cs"/>
  </compounddef>
</doxygen>
